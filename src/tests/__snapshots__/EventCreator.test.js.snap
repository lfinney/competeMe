// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EventCreator should render component 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EventCreator />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="EventCreator"
>
        <h2
                className="formTitle"
        >
                Create New Competition
        </h2>
        <input
                className="text-input"
                onChange={[Function]}
                placeholder="Competition Name"
                type="text"
                value=""
        />
        <select
                onChange={[Function]}
                value={undefined}
        >
                <option
                        value=""
                >
                        -Select a Sport-
                </option>
                <option
                        value="Soccer"
                >
                        Soccer
                </option>
                <option
                        value="Frisbee"
                >
                        Frisbee
                </option>
                <option
                        value="Flag Football"
                >
                        Flag Football
                </option>
        </select>
        <input
                className="text-input"
                onChange={[Function]}
                pattern="\\\\d*"
                placeholder="# Players Needed"
                type="number"
                value=""
        />
        <h3
                className="formTitle"
        >
                Competitiveness
        </h3>
        <form
                action="selectCompetitiveness"
                className="radioButtons"
        >
                <input
                        checked={true}
                        className="radio rad1"
                        name="competitiveness"
                        onChange={[Function]}
                        type="radio"
                        value="Casual"
                />
                <span
                        className="text1"
                >
                        Casual
                </span>
                <br />
                <input
                        checked={false}
                        className="radio rad2"
                        name="competitiveness"
                        onChange={[Function]}
                        type="radio"
                        value="Casual/Competitive"
                />
                <span
                        className="text2"
                >
                        Casual/Competitive
                </span>
                <br />
                <input
                        checked={false}
                        className="radio rad3"
                        name="competitiveness"
                        onChange={[Function]}
                        type="radio"
                        value="Competitive"
                />
                <span
                        className="text3"
                >
                        Competitive
                </span>
                <br />
        </form>
        <form>
                <h3
                        className="formTitle"
                >
                        Event Date and Time
                </h3>
                <input
                        className="date-input"
                        name="date"
                        onChange={[Function]}
                        type="date"
                        value="2017-11-01"
                />
                <input
                        className="time-input"
                        name="time"
                        onChange={[Function]}
                        step="1800"
                        type="time"
                        value="15:00"
                />
        </form>
        <input
                className="textInput"
                cols="40"
                onChange={[Function]}
                placeholder="Other details competitors should know about..."
                rows="5"
                type="textarea"
                value=""
        />
        <h3
                className="formTitle"
        >
                Pick a Park to Play At
        </h3>
        <input
                className="text-input"
                onChange={[Function]}
                placeholder="Park Search"
                type="text"
                value=""
        />
        <button
                onClick={[Function]}
        >
                Find Park
        </button>
        <div
                className="park-map"
        >
                <withScriptjs(withGoogleMap(Component))
                        containerElement={
                                <div
                                        style={
                                                Object {
                                                        "height": "200px",
                                                        "width": "200px",
                                                      }
                                        }
                                />
                        }
                        googleMapURL="https://maps.googleapis.com/maps/api/js?key=AIzaSyDzYxqnDIXey7rxBdm3sK1uoFKISRmpz7o&parks=places&callback=initMap"
                        loadingElement={
                                <div
                                        style={
                                                Object {
                                                        "height": "200px",
                                                        "width": "200px",
                                                      }
                                        }
                                />
                        }
                        mapElement={
                                <div
                                        style={
                                                Object {
                                                        "height": "200px",
                                                        "width": "200px",
                                                      }
                                        }
                                />
                        }
                        nearbyParks={undefined}
                        pickPark={[Function]}
                />
        </div>
        <button
                onClick={[Function]}
        >
                Game On!
        </button>
</div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h2
            className="formTitle"
>
            Create New Competition
</h2>,
          <input
            className="text-input"
            onChange={[Function]}
            placeholder="Competition Name"
            type="text"
            value=""
/>,
          <select
            onChange={[Function]}
            value={undefined}
>
            <option
                        value=""
            >
                        -Select a Sport-
            </option>
            <option
                        value="Soccer"
            >
                        Soccer
            </option>
            <option
                        value="Frisbee"
            >
                        Frisbee
            </option>
            <option
                        value="Flag Football"
            >
                        Flag Football
            </option>
</select>,
          <input
            className="text-input"
            onChange={[Function]}
            pattern="\\\\d*"
            placeholder="# Players Needed"
            type="number"
            value=""
/>,
          <h3
            className="formTitle"
>
            Competitiveness
</h3>,
          <form
            action="selectCompetitiveness"
            className="radioButtons"
>
            <input
                        checked={true}
                        className="radio rad1"
                        name="competitiveness"
                        onChange={[Function]}
                        type="radio"
                        value="Casual"
            />
            <span
                        className="text1"
            >
                        Casual
            </span>
            <br />
            <input
                        checked={false}
                        className="radio rad2"
                        name="competitiveness"
                        onChange={[Function]}
                        type="radio"
                        value="Casual/Competitive"
            />
            <span
                        className="text2"
            >
                        Casual/Competitive
            </span>
            <br />
            <input
                        checked={false}
                        className="radio rad3"
                        name="competitiveness"
                        onChange={[Function]}
                        type="radio"
                        value="Competitive"
            />
            <span
                        className="text3"
            >
                        Competitive
            </span>
            <br />
</form>,
          <form>
            <h3
                        className="formTitle"
            >
                        Event Date and Time
            </h3>
            <input
                        className="date-input"
                        name="date"
                        onChange={[Function]}
                        type="date"
                        value="2017-11-01"
            />
            <input
                        className="time-input"
                        name="time"
                        onChange={[Function]}
                        step="1800"
                        type="time"
                        value="15:00"
            />
</form>,
          <input
            className="textInput"
            cols="40"
            onChange={[Function]}
            placeholder="Other details competitors should know about..."
            rows="5"
            type="textarea"
            value=""
/>,
          <h3
            className="formTitle"
>
            Pick a Park to Play At
</h3>,
          <input
            className="text-input"
            onChange={[Function]}
            placeholder="Park Search"
            type="text"
            value=""
/>,
          <button
            onClick={[Function]}
>
            Find Park
</button>,
          <div
            className="park-map"
>
            <withScriptjs(withGoogleMap(Component))
                        containerElement={
                                    <div
                                                style={
                                                            Object {
                                                                        "height": "200px",
                                                                        "width": "200px",
                                                                      }
                                                }
                                    />
                        }
                        googleMapURL="https://maps.googleapis.com/maps/api/js?key=AIzaSyDzYxqnDIXey7rxBdm3sK1uoFKISRmpz7o&parks=places&callback=initMap"
                        loadingElement={
                                    <div
                                                style={
                                                            Object {
                                                                        "height": "200px",
                                                                        "width": "200px",
                                                                      }
                                                }
                                    />
                        }
                        mapElement={
                                    <div
                                                style={
                                                            Object {
                                                                        "height": "200px",
                                                                        "width": "200px",
                                                                      }
                                                }
                                    />
                        }
                        nearbyParks={undefined}
                        pickPark={[Function]}
            />
</div>,
          <button
            onClick={[Function]}
>
            Game On!
</button>,
        ],
        "className": "EventCreator",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "Create New Competition",
            "className": "formTitle",
          },
          "ref": null,
          "rendered": "Create New Competition",
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "className": "text-input",
            "onChange": [Function],
            "placeholder": "Competition Name",
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <option
                value=""
>
                -Select a Sport-
</option>,
              <option
                value="Soccer"
>
                Soccer
</option>,
              <option
                value="Frisbee"
>
                Frisbee
</option>,
              <option
                value="Flag Football"
>
                Flag Football
</option>,
            ],
            "onChange": [Function],
            "value": undefined,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "-Select a Sport-",
                "value": "",
              },
              "ref": null,
              "rendered": "-Select a Sport-",
              "type": "option",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "Soccer",
                "value": "Soccer",
              },
              "ref": null,
              "rendered": "Soccer",
              "type": "option",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "Frisbee",
                "value": "Frisbee",
              },
              "ref": null,
              "rendered": "Frisbee",
              "type": "option",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "Flag Football",
                "value": "Flag Football",
              },
              "ref": null,
              "rendered": "Flag Football",
              "type": "option",
            },
          ],
          "type": "select",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "className": "text-input",
            "onChange": [Function],
            "pattern": "\\\\d*",
            "placeholder": "# Players Needed",
            "type": "number",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "Competitiveness",
            "className": "formTitle",
          },
          "ref": null,
          "rendered": "Competitiveness",
          "type": "h3",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "action": "selectCompetitiveness",
            "children": Array [
              <input
                checked={true}
                className="radio rad1"
                name="competitiveness"
                onChange={[Function]}
                type="radio"
                value="Casual"
/>,
              <span
                className="text1"
>
                Casual
</span>,
              <br />,
              <input
                checked={false}
                className="radio rad2"
                name="competitiveness"
                onChange={[Function]}
                type="radio"
                value="Casual/Competitive"
/>,
              <span
                className="text2"
>
                Casual/Competitive
</span>,
              <br />,
              <input
                checked={false}
                className="radio rad3"
                name="competitiveness"
                onChange={[Function]}
                type="radio"
                value="Competitive"
/>,
              <span
                className="text3"
>
                Competitive
</span>,
              <br />,
            ],
            "className": "radioButtons",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "checked": true,
                "className": "radio rad1",
                "name": "competitiveness",
                "onChange": [Function],
                "type": "radio",
                "value": "Casual",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "Casual",
                "className": "text1",
              },
              "ref": null,
              "rendered": "Casual",
              "type": "span",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "checked": false,
                "className": "radio rad2",
                "name": "competitiveness",
                "onChange": [Function],
                "type": "radio",
                "value": "Casual/Competitive",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "Casual/Competitive",
                "className": "text2",
              },
              "ref": null,
              "rendered": "Casual/Competitive",
              "type": "span",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "checked": false,
                "className": "radio rad3",
                "name": "competitiveness",
                "onChange": [Function],
                "type": "radio",
                "value": "Competitive",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "Competitive",
                "className": "text3",
              },
              "ref": null,
              "rendered": "Competitive",
              "type": "span",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
          ],
          "type": "form",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h3
                className="formTitle"
>
                Event Date and Time
</h3>,
              <input
                className="date-input"
                name="date"
                onChange={[Function]}
                type="date"
                value="2017-11-01"
/>,
              <input
                className="time-input"
                name="time"
                onChange={[Function]}
                step="1800"
                type="time"
                value="15:00"
/>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "Event Date and Time",
                "className": "formTitle",
              },
              "ref": null,
              "rendered": "Event Date and Time",
              "type": "h3",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "className": "date-input",
                "name": "date",
                "onChange": [Function],
                "type": "date",
                "value": "2017-11-01",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "className": "time-input",
                "name": "time",
                "onChange": [Function],
                "step": "1800",
                "type": "time",
                "value": "15:00",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "form",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "className": "textInput",
            "cols": "40",
            "onChange": [Function],
            "placeholder": "Other details competitors should know about...",
            "rows": "5",
            "type": "textarea",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "Pick a Park to Play At",
            "className": "formTitle",
          },
          "ref": null,
          "rendered": "Pick a Park to Play At",
          "type": "h3",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "className": "text-input",
            "onChange": [Function],
            "placeholder": "Park Search",
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "Find Park",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Find Park",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": <withScriptjs(withGoogleMap(Component))
              containerElement={
                            <div
                                          style={
                                                        Object {
                                                                      "height": "200px",
                                                                      "width": "200px",
                                                                    }
                                          }
                            />
              }
              googleMapURL="https://maps.googleapis.com/maps/api/js?key=AIzaSyDzYxqnDIXey7rxBdm3sK1uoFKISRmpz7o&parks=places&callback=initMap"
              loadingElement={
                            <div
                                          style={
                                                        Object {
                                                                      "height": "200px",
                                                                      "width": "200px",
                                                                    }
                                          }
                            />
              }
              mapElement={
                            <div
                                          style={
                                                        Object {
                                                                      "height": "200px",
                                                                      "width": "200px",
                                                                    }
                                          }
                            />
              }
              nearbyParks={undefined}
              pickPark={[Function]}
/>,
            "className": "park-map",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "containerElement": <div
                style={
                                Object {
                                                "height": "200px",
                                                "width": "200px",
                                              }
                }
/>,
              "googleMapURL": "https://maps.googleapis.com/maps/api/js?key=AIzaSyDzYxqnDIXey7rxBdm3sK1uoFKISRmpz7o&parks=places&callback=initMap",
              "loadingElement": <div
                style={
                                Object {
                                                "height": "200px",
                                                "width": "200px",
                                              }
                }
/>,
              "mapElement": <div
                style={
                                Object {
                                                "height": "200px",
                                                "width": "200px",
                                              }
                }
/>,
              "nearbyParks": undefined,
              "pickPark": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "Game On!",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Game On!",
          "type": "button",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="EventCreator"
>
          <h2
                    className="formTitle"
          >
                    Create New Competition
          </h2>
          <input
                    className="text-input"
                    onChange={[Function]}
                    placeholder="Competition Name"
                    type="text"
                    value=""
          />
          <select
                    onChange={[Function]}
                    value={undefined}
          >
                    <option
                              value=""
                    >
                              -Select a Sport-
                    </option>
                    <option
                              value="Soccer"
                    >
                              Soccer
                    </option>
                    <option
                              value="Frisbee"
                    >
                              Frisbee
                    </option>
                    <option
                              value="Flag Football"
                    >
                              Flag Football
                    </option>
          </select>
          <input
                    className="text-input"
                    onChange={[Function]}
                    pattern="\\\\d*"
                    placeholder="# Players Needed"
                    type="number"
                    value=""
          />
          <h3
                    className="formTitle"
          >
                    Competitiveness
          </h3>
          <form
                    action="selectCompetitiveness"
                    className="radioButtons"
          >
                    <input
                              checked={true}
                              className="radio rad1"
                              name="competitiveness"
                              onChange={[Function]}
                              type="radio"
                              value="Casual"
                    />
                    <span
                              className="text1"
                    >
                              Casual
                    </span>
                    <br />
                    <input
                              checked={false}
                              className="radio rad2"
                              name="competitiveness"
                              onChange={[Function]}
                              type="radio"
                              value="Casual/Competitive"
                    />
                    <span
                              className="text2"
                    >
                              Casual/Competitive
                    </span>
                    <br />
                    <input
                              checked={false}
                              className="radio rad3"
                              name="competitiveness"
                              onChange={[Function]}
                              type="radio"
                              value="Competitive"
                    />
                    <span
                              className="text3"
                    >
                              Competitive
                    </span>
                    <br />
          </form>
          <form>
                    <h3
                              className="formTitle"
                    >
                              Event Date and Time
                    </h3>
                    <input
                              className="date-input"
                              name="date"
                              onChange={[Function]}
                              type="date"
                              value="2017-11-01"
                    />
                    <input
                              className="time-input"
                              name="time"
                              onChange={[Function]}
                              step="1800"
                              type="time"
                              value="15:00"
                    />
          </form>
          <input
                    className="textInput"
                    cols="40"
                    onChange={[Function]}
                    placeholder="Other details competitors should know about..."
                    rows="5"
                    type="textarea"
                    value=""
          />
          <h3
                    className="formTitle"
          >
                    Pick a Park to Play At
          </h3>
          <input
                    className="text-input"
                    onChange={[Function]}
                    placeholder="Park Search"
                    type="text"
                    value=""
          />
          <button
                    onClick={[Function]}
          >
                    Find Park
          </button>
          <div
                    className="park-map"
          >
                    <withScriptjs(withGoogleMap(Component))
                              containerElement={
                                        <div
                                                  style={
                                                            Object {
                                                                      "height": "200px",
                                                                      "width": "200px",
                                                                    }
                                                  }
                                        />
                              }
                              googleMapURL="https://maps.googleapis.com/maps/api/js?key=AIzaSyDzYxqnDIXey7rxBdm3sK1uoFKISRmpz7o&parks=places&callback=initMap"
                              loadingElement={
                                        <div
                                                  style={
                                                            Object {
                                                                      "height": "200px",
                                                                      "width": "200px",
                                                                    }
                                                  }
                                        />
                              }
                              mapElement={
                                        <div
                                                  style={
                                                            Object {
                                                                      "height": "200px",
                                                                      "width": "200px",
                                                                    }
                                                  }
                                        />
                              }
                              nearbyParks={undefined}
                              pickPark={[Function]}
                    />
          </div>
          <button
                    onClick={[Function]}
          >
                    Game On!
          </button>
</div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h2
              className="formTitle"
>
              Create New Competition
</h2>,
            <input
              className="text-input"
              onChange={[Function]}
              placeholder="Competition Name"
              type="text"
              value=""
/>,
            <select
              onChange={[Function]}
              value={undefined}
>
              <option
                            value=""
              >
                            -Select a Sport-
              </option>
              <option
                            value="Soccer"
              >
                            Soccer
              </option>
              <option
                            value="Frisbee"
              >
                            Frisbee
              </option>
              <option
                            value="Flag Football"
              >
                            Flag Football
              </option>
</select>,
            <input
              className="text-input"
              onChange={[Function]}
              pattern="\\\\d*"
              placeholder="# Players Needed"
              type="number"
              value=""
/>,
            <h3
              className="formTitle"
>
              Competitiveness
</h3>,
            <form
              action="selectCompetitiveness"
              className="radioButtons"
>
              <input
                            checked={true}
                            className="radio rad1"
                            name="competitiveness"
                            onChange={[Function]}
                            type="radio"
                            value="Casual"
              />
              <span
                            className="text1"
              >
                            Casual
              </span>
              <br />
              <input
                            checked={false}
                            className="radio rad2"
                            name="competitiveness"
                            onChange={[Function]}
                            type="radio"
                            value="Casual/Competitive"
              />
              <span
                            className="text2"
              >
                            Casual/Competitive
              </span>
              <br />
              <input
                            checked={false}
                            className="radio rad3"
                            name="competitiveness"
                            onChange={[Function]}
                            type="radio"
                            value="Competitive"
              />
              <span
                            className="text3"
              >
                            Competitive
              </span>
              <br />
</form>,
            <form>
              <h3
                            className="formTitle"
              >
                            Event Date and Time
              </h3>
              <input
                            className="date-input"
                            name="date"
                            onChange={[Function]}
                            type="date"
                            value="2017-11-01"
              />
              <input
                            className="time-input"
                            name="time"
                            onChange={[Function]}
                            step="1800"
                            type="time"
                            value="15:00"
              />
</form>,
            <input
              className="textInput"
              cols="40"
              onChange={[Function]}
              placeholder="Other details competitors should know about..."
              rows="5"
              type="textarea"
              value=""
/>,
            <h3
              className="formTitle"
>
              Pick a Park to Play At
</h3>,
            <input
              className="text-input"
              onChange={[Function]}
              placeholder="Park Search"
              type="text"
              value=""
/>,
            <button
              onClick={[Function]}
>
              Find Park
</button>,
            <div
              className="park-map"
>
              <withScriptjs(withGoogleMap(Component))
                            containerElement={
                                          <div
                                                        style={
                                                                      Object {
                                                                                    "height": "200px",
                                                                                    "width": "200px",
                                                                                  }
                                                        }
                                          />
                            }
                            googleMapURL="https://maps.googleapis.com/maps/api/js?key=AIzaSyDzYxqnDIXey7rxBdm3sK1uoFKISRmpz7o&parks=places&callback=initMap"
                            loadingElement={
                                          <div
                                                        style={
                                                                      Object {
                                                                                    "height": "200px",
                                                                                    "width": "200px",
                                                                                  }
                                                        }
                                          />
                            }
                            mapElement={
                                          <div
                                                        style={
                                                                      Object {
                                                                                    "height": "200px",
                                                                                    "width": "200px",
                                                                                  }
                                                        }
                                          />
                            }
                            nearbyParks={undefined}
                            pickPark={[Function]}
              />
</div>,
            <button
              onClick={[Function]}
>
              Game On!
</button>,
          ],
          "className": "EventCreator",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "Create New Competition",
              "className": "formTitle",
            },
            "ref": null,
            "rendered": "Create New Competition",
            "type": "h2",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "className": "text-input",
              "onChange": [Function],
              "placeholder": "Competition Name",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <option
                  value=""
>
                  -Select a Sport-
</option>,
                <option
                  value="Soccer"
>
                  Soccer
</option>,
                <option
                  value="Frisbee"
>
                  Frisbee
</option>,
                <option
                  value="Flag Football"
>
                  Flag Football
</option>,
              ],
              "onChange": [Function],
              "value": undefined,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "-Select a Sport-",
                  "value": "",
                },
                "ref": null,
                "rendered": "-Select a Sport-",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "Soccer",
                  "value": "Soccer",
                },
                "ref": null,
                "rendered": "Soccer",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "Frisbee",
                  "value": "Frisbee",
                },
                "ref": null,
                "rendered": "Frisbee",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "Flag Football",
                  "value": "Flag Football",
                },
                "ref": null,
                "rendered": "Flag Football",
                "type": "option",
              },
            ],
            "type": "select",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "className": "text-input",
              "onChange": [Function],
              "pattern": "\\\\d*",
              "placeholder": "# Players Needed",
              "type": "number",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "Competitiveness",
              "className": "formTitle",
            },
            "ref": null,
            "rendered": "Competitiveness",
            "type": "h3",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "action": "selectCompetitiveness",
              "children": Array [
                <input
                  checked={true}
                  className="radio rad1"
                  name="competitiveness"
                  onChange={[Function]}
                  type="radio"
                  value="Casual"
/>,
                <span
                  className="text1"
>
                  Casual
</span>,
                <br />,
                <input
                  checked={false}
                  className="radio rad2"
                  name="competitiveness"
                  onChange={[Function]}
                  type="radio"
                  value="Casual/Competitive"
/>,
                <span
                  className="text2"
>
                  Casual/Competitive
</span>,
                <br />,
                <input
                  checked={false}
                  className="radio rad3"
                  name="competitiveness"
                  onChange={[Function]}
                  type="radio"
                  value="Competitive"
/>,
                <span
                  className="text3"
>
                  Competitive
</span>,
                <br />,
              ],
              "className": "radioButtons",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "checked": true,
                  "className": "radio rad1",
                  "name": "competitiveness",
                  "onChange": [Function],
                  "type": "radio",
                  "value": "Casual",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "Casual",
                  "className": "text1",
                },
                "ref": null,
                "rendered": "Casual",
                "type": "span",
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "checked": false,
                  "className": "radio rad2",
                  "name": "competitiveness",
                  "onChange": [Function],
                  "type": "radio",
                  "value": "Casual/Competitive",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "Casual/Competitive",
                  "className": "text2",
                },
                "ref": null,
                "rendered": "Casual/Competitive",
                "type": "span",
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "checked": false,
                  "className": "radio rad3",
                  "name": "competitiveness",
                  "onChange": [Function],
                  "type": "radio",
                  "value": "Competitive",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "Competitive",
                  "className": "text3",
                },
                "ref": null,
                "rendered": "Competitive",
                "type": "span",
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
            ],
            "type": "form",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h3
                  className="formTitle"
>
                  Event Date and Time
</h3>,
                <input
                  className="date-input"
                  name="date"
                  onChange={[Function]}
                  type="date"
                  value="2017-11-01"
/>,
                <input
                  className="time-input"
                  name="time"
                  onChange={[Function]}
                  step="1800"
                  type="time"
                  value="15:00"
/>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "Event Date and Time",
                  "className": "formTitle",
                },
                "ref": null,
                "rendered": "Event Date and Time",
                "type": "h3",
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "className": "date-input",
                  "name": "date",
                  "onChange": [Function],
                  "type": "date",
                  "value": "2017-11-01",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "className": "time-input",
                  "name": "time",
                  "onChange": [Function],
                  "step": "1800",
                  "type": "time",
                  "value": "15:00",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "form",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "className": "textInput",
              "cols": "40",
              "onChange": [Function],
              "placeholder": "Other details competitors should know about...",
              "rows": "5",
              "type": "textarea",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "Pick a Park to Play At",
              "className": "formTitle",
            },
            "ref": null,
            "rendered": "Pick a Park to Play At",
            "type": "h3",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "className": "text-input",
              "onChange": [Function],
              "placeholder": "Park Search",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "Find Park",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Find Park",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": <withScriptjs(withGoogleMap(Component))
                containerElement={
                                <div
                                                style={
                                                                Object {
                                                                                "height": "200px",
                                                                                "width": "200px",
                                                                              }
                                                }
                                />
                }
                googleMapURL="https://maps.googleapis.com/maps/api/js?key=AIzaSyDzYxqnDIXey7rxBdm3sK1uoFKISRmpz7o&parks=places&callback=initMap"
                loadingElement={
                                <div
                                                style={
                                                                Object {
                                                                                "height": "200px",
                                                                                "width": "200px",
                                                                              }
                                                }
                                />
                }
                mapElement={
                                <div
                                                style={
                                                                Object {
                                                                                "height": "200px",
                                                                                "width": "200px",
                                                                              }
                                                }
                                />
                }
                nearbyParks={undefined}
                pickPark={[Function]}
/>,
              "className": "park-map",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "containerElement": <div
                  style={
                                    Object {
                                                      "height": "200px",
                                                      "width": "200px",
                                                    }
                  }
/>,
                "googleMapURL": "https://maps.googleapis.com/maps/api/js?key=AIzaSyDzYxqnDIXey7rxBdm3sK1uoFKISRmpz7o&parks=places&callback=initMap",
                "loadingElement": <div
                  style={
                                    Object {
                                                      "height": "200px",
                                                      "width": "200px",
                                                    }
                  }
/>,
                "mapElement": <div
                  style={
                                    Object {
                                                      "height": "200px",
                                                      "width": "200px",
                                                    }
                  }
/>,
                "nearbyParks": undefined,
                "pickPark": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "Game On!",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Game On!",
            "type": "button",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
